// <auto-generated />
using System;
using LintingResults.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LintingResults.Migrations
{
    [DbContext(typeof(LintingDbContext))]
    [Migration("20240917191847_Separate Linting Result")]
    partial class SeparateLintingResult
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("LintingResults.Data.LintingResultDBModel", b =>
                {
                    b.Property<int>("LintingResultDBModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LintingItems")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RepoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateInserted")
                        .HasColumnType("TEXT");

                    b.HasKey("LintingResultDBModelId");

                    b.HasIndex("RepoId");

                    b.ToTable("LintingResults");
                });

            modelBuilder.Entity("LintingResults.Data.Repo", b =>
                {
                    b.Property<int>("RepoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RepoName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RepoId");

                    b.ToTable("Repos");
                });

            modelBuilder.Entity("LintingResults.Data.LintingResultDBModel", b =>
                {
                    b.HasOne("LintingResults.Data.Repo", null)
                        .WithMany("LintingResults")
                        .HasForeignKey("RepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LintingResults.Data.Repo", b =>
                {
                    b.Navigation("LintingResults");
                });
#pragma warning restore 612, 618
        }
    }
}
